proto messaging

enum MessageId : uint8 {
    // send public Key Exchange, rsp: InitializeCommRsp
    INITIALIZE_COMM = 0 
    // sends random 16 bytes as an challange, rsp: ChallangeRsp
    CHALLANGE = 1 
    // Finish Handshake sending true/false, rsp: HandshakeFinishedRsp
    HANDSHAKE_FINISHED = 2 
    // Start the proper App
    START_APP = 4
}

message InitializeComm{
    uint8[32] public_key = 1
}
message InitializeCommRsp{
    uint8[32] public_key = 1
}

message Challange{
    uint8[32] challange_buffer = 1
}
message ChallangeRsp{
    uint8[32] challange_buffer = 1
    uint8[12] initialization_vector = 2
    uint8[16] tag = 3
}

message HandshakeFinished{
    bool ack = 1
}
message HandshakeFinishedRsp{
    bool ack = 1
}

message Messages {
    MessageId id = 1
    InitializeComm init_comm = 2
    Challange challange = 3
    HandshakeFinished handshake_finished = 4
    bool start_app = 5
}
message Responses {
    MessageId id = 1
    InitializeCommRsp init_comm = 2
    ChallangeRsp challange = 3
    HandshakeFinishedRsp handshake_finished = 4
}



enum AppNode: uint8 {
    // Add password
    ADD_ENTRY = 0
    // Delete password
    DEL_ENTRY = 1
    // Get password
    READ_ENTRY = 2
    // Modify password
    MODIFY = 3
    // generate password
    GENERATE = 4
    // Read all entries
    READ_ALL = 5
}

message Generate {
    bool generate = 1
}

message GenerateRsp {
    uint8[32] generated_password = 1
    uint8[12] initialization_vector = 2
    uint8[16] tag = 3
}

message ReadEntry {
    uint8[16] kek = 1
    uint8 index = 2
}

message ReadEntryRsp {
    uint8[32] wrapped_password = 1
    uint8 password_length = 2
    uint8[12] initialization_vector = 3
    uint8[16] tag = 4
}

message AddEntry {
    uint8[32] info = 1
    uint8[16] kek = 2
    uint8[16] tag_kek = 3
    uint8[32] wrapped_password = 4
    uint8[16] tag_pass = 5
    uint8[12] initialization_vector = 6
    uint8 password_length = 7
}

message AddEntryRsp {
    uint8 index = 1
    uint8[32] info = 2
}

message DelEntry {
    uint8 index = 1
}

message DelEntryRsp {
    bool ack = 1
}

message Modify {
    uint8 index = 1
    uint8[32] info = 2
    uint8[32] new_password = 3
    uint8 password_length = 4
    uint8[16] tag_pass = 5
    uint8[12] initialization_vector = 6
}

message ModifyRsp {
    bool ack = 1
}

message App {
    AppNode node_id = 1
    AddEntry new_entry = 2
    Generate generate = 3
    DelEntry del_entry = 4
    Modify modify = 5
    ReadEntry read = 6
}

message AppRsp {
    AppNode node_id = 1
    AddEntryRsp new_entry = 2
    GenerateRsp generate = 3
    DelEntryRsp del_entry = 4
    ModifyRsp modify = 5
    ReadEntryRsp read = 6
}